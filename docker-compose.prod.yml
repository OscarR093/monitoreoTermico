services:
  # ----------------------------------------------------
  # Traefik (Reverse Proxy y Gestor de SSL)
  # ----------------------------------------------------
  traefik:
    image: traefik:v3.1 # <-- Versión fijada para estabilidad
    container_name: mi-traefik-proxy
    restart: unless-stopped
    command:
      # --- Configuración Estática como Argumentos ---
      # Define los entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # Habilita el proveedor de Docker
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # Define el resolutor de certificados de Let's Encrypt
      - "--certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}" # Lee el email del .env
      - "--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      # Habilita la redirección de HTTP a HTTPS
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-data:/data # Volumen para el acme.json y logs de Traefik
    networks:
      - mi-red

  # ----------------------------------------------------
  # Asistente para Extraer Certificados
  # ----------------------------------------------------
  cert-extractor:
    image: fouque/traefik-acme-extractor:latest
    container_name: mi-cert-extractor
    restart: unless-stopped
    depends_on:
      - traefik
    volumes:
      - traefik-data:/data:ro # Lee el acme.json de Traefik
      - shared-certs:/certs   # Escribe los certificados extraídos aquí
    environment:
      - "ACME_JSON_PATH=/data/acme.json"
      - "CERT_PATH=/certs"
    networks:
      - mi-red

  # ----------------------------------------------------
  # Aplicación Node.js (con etiquetas para Traefik)
  # ----------------------------------------------------
  node-app:
    image: oscarr093/monitoreotermico:1.0 # Apunta a tu imagen ya subida
    container_name: mi-aplicacion-nodejs
    restart: unless-stopped
    environment:
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASS}@mongodb:27017/${MONGO_DB_NAME}?authSource=admin
      - MQTT_BROKER_URL=mqtt://emqx
      - MQTT_USER=${MOSQUITTO_USER}
      - MQTT_PASS=${MOSQUITTO_PASS}
      - JWT_SECRET=${JWT_SECRET}
      - DOMAIN_URL=${DOMAIN_URL}
      - NODE_ENV=production
    networks:
      - mi-red
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node-app.rule=Host(`${DOMAIN_URL}`)"
      - "traefik.http.routers.node-app.entrypoints=websecure"
      - "traefik.http.routers.node-app.tls.certresolver=letsencrypt"
      - "traefik.http.services.node-app.loadbalancer.server.port=3000"

  # ----------------------------------------------------
  # Base de Datos MongoDB (sin cambios)
  # ----------------------------------------------------
  mongodb:
    image: mongodb/mongodb-community-server:7.0-ubi8
    container_name: mi-database-mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
    volumes:
      - datos-mongo:/data/db
    networks:
      - mi-red

  # ----------------------------------------------------
  # Broker EMQX (lee los certificados del volumen compartido)
  # ----------------------------------------------------
  emqx:
    image: emqx/emqx:5.7.0
    container_name: mi-broker-emqx
    restart: unless-stopped
    depends_on:
      - cert-extractor
    environment:
      - "EMQX_LISTENERS__TCP__DEFAULT__BIND=1883"
      - "EMQX_LISTENERS__SSL__DEFAULT__BIND=8883"
      - "EMQX_LISTENERS__SSL__DEFAULT__SSL_OPTIONS__KEYFILE=/certs/${DOMAIN_URL}.key"
      - "EMQX_LISTENERS__SSL__DEFAULT__SSL_OPTIONS__CERTFILE=/certs/${DOMAIN_URL}.crt"
      - "EMQX_AUTH__USER__1__USERNAME=${MOSQUITTO_USER}"
      - "EMQX_AUTH__USER__1__PASSWORD=${MOSQUITTO_PASS}"
      - "EMQX_NODE__COOKIE=${EMQX_NODE_COOKIE}"
    ports:
      - "1883:1883"
      - "8883:8883"
      - "18083:18083"
    volumes:
      - shared-certs:/certs:ro
    networks:
      - mi-red

networks:
  mi-red:

volumes:
  datos-mongo: {}
  traefik-data: {}
  shared-certs: {}

