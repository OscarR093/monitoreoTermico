version: '3.8'

services:
  # ----------------------------------------------------
  # Traefik (Manejando HTTPS y MQTTS)
  # ----------------------------------------------------
  traefik:
    image: traefik:v3.1
    container_name: mi-traefik-proxy
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.mqtts.address=:8883"
      - "--certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
      - "8883:8883"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-data:/data
    networks:
      - mi-red

  # ----------------------------------------------------
  # Aplicación Node.js (sin cambios)
  # ----------------------------------------------------
  node-app:
    image: oscarr093/monitoreotermico:1.4
    container_name: mi-aplicacion-nodejs
    restart: unless-stopped
    environment:
      - MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASS}@mongodb:27017/${MONGO_DB_NAME}?authSource=admin
      - MQTT_BROKER_URL=mqtt://emqx
      - MQTT_USER=${MOSQUITTO_USER}
      - MQTT_PASS=${MOSQUITTO_PASS}
      - JWT_SECRET=${JWT_SECRET}
      - DOMAIN_URL=${DOMAIN_URL}
      - NODE_ENV=production
      - SUPER_USER_USERNAME=${SUPER_USER_USERNAME}
      - SUPER_USER_PASSWORD=${SUPER_USER_PASSWORD}
    networks:
      - mi-red
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node-app.rule=Host(`${DOMAIN_URL}`)"
      - "traefik.http.routers.node-app.entrypoints=websecure"
      - "traefik.http.routers.node-app.tls.certresolver=letsencrypt"
      - "traefik.http.services.node-app.loadbalancer.server.port=3000"

  # ----------------------------------------------------
  # Base de Datos MongoDB (sin cambios)
  # ----------------------------------------------------
  mongodb:
    image: mongodb/mongodb-community-server:7.0-ubi8
    container_name: mi-database-mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
    volumes:
      - datos-mongo:/data/db
    networks:
      - mi-red

  # ----------------------------------------------------
  # Broker EMQX (Corregido)
  # ----------------------------------------------------
  emqx:
    image: emqx/emqx:5.7.0
    container_name: mi-broker-emqx
    restart: unless-stopped
    environment:
      - "EMQX_LISTENERS__TCP__DEFAULT__BIND=1883"
      - "EMQX_AUTH__USER__1__USERNAME=${MOSQUITTO_USER}"
      - "EMQX_AUTH__USER__1__PASSWORD=${MOSQUITTO_PASS}"
      - "EMQX_NODE__COOKIE=${EMQX_NODE_COOKIE}"
    ports:
      - "1883:1883" # Opcional, para pruebas en la red local sin SSL
      - "18083:18083" # Dashboard de EMQX
    networks:
      - mi-red
    labels:
      - "traefik.enable=true"
      # --- ✅ Corrección: Usar el dominio definido en DOMAIN_URL ---
      - "traefik.tcp.routers.emqx-secure.rule=HostSNI(`${DOMAIN_URL}`)"
      - "traefik.tcp.routers.emqx-secure.entrypoints=mqtts"
      - "traefik.tcp.routers.emqx-secure.tls.certresolver=letsencrypt"
      - "traefik.tcp.services.emqx-secure.loadbalancer.server.port=1883"

networks:
  mi-red:

volumes:
  datos-mongo: {}